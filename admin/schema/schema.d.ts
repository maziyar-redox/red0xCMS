/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for authenticating user
         * @description This route will login and valid given info with correct schema to it
         */
        post: operations["handle_login_v1_api_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for registering user
         * @description This route will register and valid given info with correct schema to it
         */
        post: operations["handle_register_v1_api_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/auth/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for getting user
         * @description This route will return user schema
         */
        post: operations["handle_user_v1_api_auth_user_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/auth/forgot-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for authenticating user
         * @description This route will forgot-password and valid given info with correct schema to it
         */
        post: operations["handle_forgotPassword_v1_api_auth_forgot_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/auth/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for authenticating user
         * @description This route will reset-password and valid given info with correct schema to it
         */
        post: operations["handle_resetPassword_v1_api_auth_reset_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/auth/resend-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for authenticating user
         * @description This route will resend otp and valid given info with correct schema to it
         */
        post: operations["handle_resend_otp_v1_api_auth_resend_otp_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/auth/otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for authenticating user
         * @description This route will otp and valid given info with correct schema to it
         */
        post: operations["handle_otp_v1_api_auth_otp_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/user/account/{action}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for getting user
         * @description This route will return user schema
         */
        post: operations["handle_account_v1_api_user_account__action__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/api/user/profile/{action}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * A route handler for getting user
         * @description This route will return user schema
         */
        post: operations["handle_profile_v1_api_user_profile__action__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ChangePasswordPayload */
        ChangePasswordPayload: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** New Password */
            new_password: string;
        };
        /** ForgotPasswordRouter */
        ForgotPasswordRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Username
             * Format: email
             */
            username: string;
        };
        /** ForgotPasswordRouterErrorResponse */
        ForgotPasswordRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.635866Z
             */
            timestamp: string;
        };
        /** ForgotPasswordRouterResponse */
        ForgotPasswordRouterResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.635039Z
             */
            timestamp: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** LoginUserRouter */
        LoginUserRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Username
             * Format: email
             */
            username: string;
            /** Password */
            password: string;
        };
        /** LoginUserRouterErrorResponse */
        LoginUserRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:49.385099Z
             */
            timestamp: string;
        };
        /** LoginUserRouterResponse */
        LoginUserRouterResponse: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Email */
            email: string;
            /** Username */
            username: string;
            /** Profile Pic */
            profile_pic: string | null;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:49.381194Z
             */
            timestamp: string;
            /**
             * Is Otp
             * @default false
             */
            is_otp: boolean;
        };
        /** OtpUserRouter */
        OtpUserRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Username
             * Format: email
             */
            username: string;
            /** Otp */
            otp: number;
        };
        /** OtpUserRouterErrorResponse */
        OtpUserRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.721809Z
             */
            timestamp: string;
        };
        /** OtpUserRouterResponse */
        OtpUserRouterResponse: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Email */
            email: string;
            /** Username */
            username: string;
            /** Profile Pic */
            profile_pic: string | null;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.717674Z
             */
            timestamp: string;
        };
        /** RegisterUserRouter */
        RegisterUserRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** RegisterUserRouterErrorResponse */
        RegisterUserRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:49.519130Z
             */
            timestamp: string;
        };
        /** RegisterUserRouterResponse */
        RegisterUserRouterResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:49.516387Z
             */
            timestamp: string;
        };
        /** ResendOtpUserRouter */
        ResendOtpUserRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Username
             * Format: email
             */
            username: string;
        };
        /** ResendOtpUserRouterErrorResponse */
        ResendOtpUserRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.732056Z
             */
            timestamp: string;
        };
        /** ResendOtpUserRouterResponse */
        ResendOtpUserRouterResponse: {
            /**
             * Status
             * @default false
             */
            status: boolean;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.730398Z
             */
            timestamp: string;
        };
        /** ResetPasswordRouter */
        ResetPasswordRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /** Password */
            password: string;
            /** Token */
            token: string;
        };
        /** ResetPasswordRouterErrorResponse */
        ResetPasswordRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.668256Z
             */
            timestamp: string;
        };
        /** ResetPasswordRouterResponse */
        ResetPasswordRouterResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:50.667279Z
             */
            timestamp: string;
        };
        /** TwoFAStatePayload */
        TwoFAStatePayload: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Guard */
            is_guard: boolean;
        };
        /** UpdateProfilePayload */
        UpdateProfilePayload: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Username */
            username: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
        };
        /** UserAccountRouterErrorResponse */
        UserAccountRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:51.064694Z
             */
            timestamp: string;
        };
        /** UserAccountRouterResponse */
        UserAccountRouterResponse: {
            /** Detail */
            detail: boolean;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:51.063647Z
             */
            timestamp: string;
        };
        /** UserProfileRouterErrorResponse */
        UserProfileRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:51.134633Z
             */
            timestamp: string;
        };
        /** UserProfileRouterResponse */
        UserProfileRouterResponse: {
            /** Detail */
            detail: boolean;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:51.133582Z
             */
            timestamp: string;
        };
        /** UserRouter */
        UserRouter: {
            /** Web Hook Token */
            web_hook_token: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** UserRouterErrorResponse */
        UserRouterErrorResponse: {
            /** Detail */
            detail: string;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:49.567666Z
             */
            timestamp: string;
        };
        /** UserRouterResponse */
        UserRouterResponse: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Email */
            email: string;
            /** Username */
            username: string;
            /** Profile Pic */
            profile_pic: string | null;
            /** Is Guard */
            is_guard: boolean;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-07-17T12:18:49.565964Z
             */
            timestamp: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * ActionEnum
         * @enum {string}
         */
        app__routes__user__account__account_dto__ActionEnum: "twofa_state" | "change_password";
        /**
         * ActionEnum
         * @enum {string}
         */
        app__routes__user__profile__profile_dto__ActionEnum: "update_profile";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    handle_login_v1_api_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginUserRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginUserRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginUserRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginUserRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_register_v1_api_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterUserRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegisterUserRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegisterUserRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegisterUserRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_user_v1_api_auth_user_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_forgotPassword_v1_api_auth_forgot_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ForgotPasswordRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ForgotPasswordRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ForgotPasswordRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ForgotPasswordRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_resetPassword_v1_api_auth_reset_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResetPasswordRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResetPasswordRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResetPasswordRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResetPasswordRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_resend_otp_v1_api_auth_resend_otp_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResendOtpUserRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResendOtpUserRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResendOtpUserRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResendOtpUserRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_otp_v1_api_auth_otp_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OtpUserRouter"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OtpUserRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OtpUserRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OtpUserRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_account_v1_api_user_account__action__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                action: components["schemas"]["app__routes__user__account__account_dto__ActionEnum"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TwoFAStatePayload"] | components["schemas"]["ChangePasswordPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserAccountRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserAccountRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserAccountRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_profile_v1_api_user_profile__action__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                action: components["schemas"]["app__routes__user__profile__profile_dto__ActionEnum"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateProfilePayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfileRouterResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfileRouterErrorResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfileRouterErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
